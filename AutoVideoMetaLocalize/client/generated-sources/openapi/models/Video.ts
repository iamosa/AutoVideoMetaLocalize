/* tslint:disable */
/* eslint-disable */
/**
 * AutoVideoMetaLocalize
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    VideoAgeGating,
    VideoAgeGatingFromJSON,
    VideoAgeGatingFromJSONTyped,
    VideoAgeGatingToJSON,
    VideoContentDetails,
    VideoContentDetailsFromJSON,
    VideoContentDetailsFromJSONTyped,
    VideoContentDetailsToJSON,
    VideoFileDetails,
    VideoFileDetailsFromJSON,
    VideoFileDetailsFromJSONTyped,
    VideoFileDetailsToJSON,
    VideoLiveStreamingDetails,
    VideoLiveStreamingDetailsFromJSON,
    VideoLiveStreamingDetailsFromJSONTyped,
    VideoLiveStreamingDetailsToJSON,
    VideoLocalization,
    VideoLocalizationFromJSON,
    VideoLocalizationFromJSONTyped,
    VideoLocalizationToJSON,
    VideoMonetizationDetails,
    VideoMonetizationDetailsFromJSON,
    VideoMonetizationDetailsFromJSONTyped,
    VideoMonetizationDetailsToJSON,
    VideoPlayer,
    VideoPlayerFromJSON,
    VideoPlayerFromJSONTyped,
    VideoPlayerToJSON,
    VideoProcessingDetails,
    VideoProcessingDetailsFromJSON,
    VideoProcessingDetailsFromJSONTyped,
    VideoProcessingDetailsToJSON,
    VideoProjectDetails,
    VideoProjectDetailsFromJSON,
    VideoProjectDetailsFromJSONTyped,
    VideoProjectDetailsToJSON,
    VideoRecordingDetails,
    VideoRecordingDetailsFromJSON,
    VideoRecordingDetailsFromJSONTyped,
    VideoRecordingDetailsToJSON,
    VideoSnippet,
    VideoSnippetFromJSON,
    VideoSnippetFromJSONTyped,
    VideoSnippetToJSON,
    VideoStatistics,
    VideoStatisticsFromJSON,
    VideoStatisticsFromJSONTyped,
    VideoStatisticsToJSON,
    VideoStatus,
    VideoStatusFromJSON,
    VideoStatusFromJSONTyped,
    VideoStatusToJSON,
    VideoSuggestions,
    VideoSuggestionsFromJSON,
    VideoSuggestionsFromJSONTyped,
    VideoSuggestionsToJSON,
    VideoTopicDetails,
    VideoTopicDetailsFromJSON,
    VideoTopicDetailsFromJSONTyped,
    VideoTopicDetailsToJSON,
} from './';

/**
 * 
 * @export
 * @interface Video
 */
export interface Video {
    /**
     * 
     * @type {VideoAgeGating}
     * @memberof Video
     */
    ageGating?: VideoAgeGating;
    /**
     * 
     * @type {VideoContentDetails}
     * @memberof Video
     */
    contentDetails?: VideoContentDetails;
    /**
     * 
     * @type {string}
     * @memberof Video
     */
    eTag?: string | null;
    /**
     * 
     * @type {VideoFileDetails}
     * @memberof Video
     */
    fileDetails?: VideoFileDetails;
    /**
     * 
     * @type {string}
     * @memberof Video
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Video
     */
    kind?: string | null;
    /**
     * 
     * @type {VideoLiveStreamingDetails}
     * @memberof Video
     */
    liveStreamingDetails?: VideoLiveStreamingDetails;
    /**
     * 
     * @type {{ [key: string]: VideoLocalization; }}
     * @memberof Video
     */
    localizations?: { [key: string]: VideoLocalization; } | null;
    /**
     * 
     * @type {VideoMonetizationDetails}
     * @memberof Video
     */
    monetizationDetails?: VideoMonetizationDetails;
    /**
     * 
     * @type {VideoPlayer}
     * @memberof Video
     */
    player?: VideoPlayer;
    /**
     * 
     * @type {VideoProcessingDetails}
     * @memberof Video
     */
    processingDetails?: VideoProcessingDetails;
    /**
     * 
     * @type {VideoProjectDetails}
     * @memberof Video
     */
    projectDetails?: VideoProjectDetails;
    /**
     * 
     * @type {VideoRecordingDetails}
     * @memberof Video
     */
    recordingDetails?: VideoRecordingDetails;
    /**
     * 
     * @type {VideoSnippet}
     * @memberof Video
     */
    snippet?: VideoSnippet;
    /**
     * 
     * @type {VideoStatistics}
     * @memberof Video
     */
    statistics?: VideoStatistics;
    /**
     * 
     * @type {VideoStatus}
     * @memberof Video
     */
    status?: VideoStatus;
    /**
     * 
     * @type {VideoSuggestions}
     * @memberof Video
     */
    suggestions?: VideoSuggestions;
    /**
     * 
     * @type {VideoTopicDetails}
     * @memberof Video
     */
    topicDetails?: VideoTopicDetails;
}

export function VideoFromJSON(json: any): Video {
    return VideoFromJSONTyped(json, false);
}

export function VideoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Video {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ageGating': !exists(json, 'ageGating') ? undefined : VideoAgeGatingFromJSON(json['ageGating']),
        'contentDetails': !exists(json, 'contentDetails') ? undefined : VideoContentDetailsFromJSON(json['contentDetails']),
        'eTag': !exists(json, 'eTag') ? undefined : json['eTag'],
        'fileDetails': !exists(json, 'fileDetails') ? undefined : VideoFileDetailsFromJSON(json['fileDetails']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'liveStreamingDetails': !exists(json, 'liveStreamingDetails') ? undefined : VideoLiveStreamingDetailsFromJSON(json['liveStreamingDetails']),
        'localizations': !exists(json, 'localizations') ? undefined : (json['localizations'] === null ? null : mapValues(json['localizations'], VideoLocalizationFromJSON)),
        'monetizationDetails': !exists(json, 'monetizationDetails') ? undefined : VideoMonetizationDetailsFromJSON(json['monetizationDetails']),
        'player': !exists(json, 'player') ? undefined : VideoPlayerFromJSON(json['player']),
        'processingDetails': !exists(json, 'processingDetails') ? undefined : VideoProcessingDetailsFromJSON(json['processingDetails']),
        'projectDetails': !exists(json, 'projectDetails') ? undefined : VideoProjectDetailsFromJSON(json['projectDetails']),
        'recordingDetails': !exists(json, 'recordingDetails') ? undefined : VideoRecordingDetailsFromJSON(json['recordingDetails']),
        'snippet': !exists(json, 'snippet') ? undefined : VideoSnippetFromJSON(json['snippet']),
        'statistics': !exists(json, 'statistics') ? undefined : VideoStatisticsFromJSON(json['statistics']),
        'status': !exists(json, 'status') ? undefined : VideoStatusFromJSON(json['status']),
        'suggestions': !exists(json, 'suggestions') ? undefined : VideoSuggestionsFromJSON(json['suggestions']),
        'topicDetails': !exists(json, 'topicDetails') ? undefined : VideoTopicDetailsFromJSON(json['topicDetails']),
    };
}

export function VideoToJSON(value?: Video | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ageGating': VideoAgeGatingToJSON(value.ageGating),
        'contentDetails': VideoContentDetailsToJSON(value.contentDetails),
        'eTag': value.eTag,
        'fileDetails': VideoFileDetailsToJSON(value.fileDetails),
        'id': value.id,
        'kind': value.kind,
        'liveStreamingDetails': VideoLiveStreamingDetailsToJSON(value.liveStreamingDetails),
        'localizations': value.localizations === undefined ? undefined : (value.localizations === null ? null : mapValues(value.localizations, VideoLocalizationToJSON)),
        'monetizationDetails': VideoMonetizationDetailsToJSON(value.monetizationDetails),
        'player': VideoPlayerToJSON(value.player),
        'processingDetails': VideoProcessingDetailsToJSON(value.processingDetails),
        'projectDetails': VideoProjectDetailsToJSON(value.projectDetails),
        'recordingDetails': VideoRecordingDetailsToJSON(value.recordingDetails),
        'snippet': VideoSnippetToJSON(value.snippet),
        'statistics': VideoStatisticsToJSON(value.statistics),
        'status': VideoStatusToJSON(value.status),
        'suggestions': VideoSuggestionsToJSON(value.suggestions),
        'topicDetails': VideoTopicDetailsToJSON(value.topicDetails),
    };
}


