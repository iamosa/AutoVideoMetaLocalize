/* tslint:disable */
/* eslint-disable */
/**
 * AutoVideoMetaLocalize
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    I18nLanguageSnippet,
    I18nLanguageSnippetFromJSON,
    I18nLanguageSnippetFromJSONTyped,
    I18nLanguageSnippetToJSON,
} from './';

/**
 * 
 * @export
 * @interface I18nLanguage
 */
export interface I18nLanguage {
    /**
     * 
     * @type {string}
     * @memberof I18nLanguage
     */
    eTag?: string | null;
    /**
     * 
     * @type {string}
     * @memberof I18nLanguage
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof I18nLanguage
     */
    kind?: string | null;
    /**
     * 
     * @type {I18nLanguageSnippet}
     * @memberof I18nLanguage
     */
    snippet?: I18nLanguageSnippet;
}

export function I18nLanguageFromJSON(json: any): I18nLanguage {
    return I18nLanguageFromJSONTyped(json, false);
}

export function I18nLanguageFromJSONTyped(json: any, ignoreDiscriminator: boolean): I18nLanguage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eTag': !exists(json, 'eTag') ? undefined : json['eTag'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'snippet': !exists(json, 'snippet') ? undefined : I18nLanguageSnippetFromJSON(json['snippet']),
    };
}

export function I18nLanguageToJSON(value?: I18nLanguage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eTag': value.eTag,
        'id': value.id,
        'kind': value.kind,
        'snippet': I18nLanguageSnippetToJSON(value.snippet),
    };
}


