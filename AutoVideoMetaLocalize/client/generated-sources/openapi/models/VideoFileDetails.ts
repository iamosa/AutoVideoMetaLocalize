/* tslint:disable */
/* eslint-disable */
/**
 * AutoVideoMetaLocalize
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    VideoFileDetailsAudioStream,
    VideoFileDetailsAudioStreamFromJSON,
    VideoFileDetailsAudioStreamFromJSONTyped,
    VideoFileDetailsAudioStreamToJSON,
    VideoFileDetailsVideoStream,
    VideoFileDetailsVideoStreamFromJSON,
    VideoFileDetailsVideoStreamFromJSONTyped,
    VideoFileDetailsVideoStreamToJSON,
} from './';

/**
 * 
 * @export
 * @interface VideoFileDetails
 */
export interface VideoFileDetails {
    /**
     * 
     * @type {Array<VideoFileDetailsAudioStream>}
     * @memberof VideoFileDetails
     */
    audioStreams?: Array<VideoFileDetailsAudioStream> | null;
    /**
     * 
     * @type {number}
     * @memberof VideoFileDetails
     */
    bitrateBps?: number | null;
    /**
     * 
     * @type {string}
     * @memberof VideoFileDetails
     */
    container?: string | null;
    /**
     * 
     * @type {string}
     * @memberof VideoFileDetails
     */
    creationTime?: string | null;
    /**
     * 
     * @type {number}
     * @memberof VideoFileDetails
     */
    durationMs?: number | null;
    /**
     * 
     * @type {string}
     * @memberof VideoFileDetails
     */
    fileName?: string | null;
    /**
     * 
     * @type {number}
     * @memberof VideoFileDetails
     */
    fileSize?: number | null;
    /**
     * 
     * @type {string}
     * @memberof VideoFileDetails
     */
    fileType?: string | null;
    /**
     * 
     * @type {Array<VideoFileDetailsVideoStream>}
     * @memberof VideoFileDetails
     */
    videoStreams?: Array<VideoFileDetailsVideoStream> | null;
    /**
     * 
     * @type {string}
     * @memberof VideoFileDetails
     */
    eTag?: string | null;
}

export function VideoFileDetailsFromJSON(json: any): VideoFileDetails {
    return VideoFileDetailsFromJSONTyped(json, false);
}

export function VideoFileDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoFileDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'audioStreams': !exists(json, 'audioStreams') ? undefined : (json['audioStreams'] === null ? null : (json['audioStreams'] as Array<any>).map(VideoFileDetailsAudioStreamFromJSON)),
        'bitrateBps': !exists(json, 'bitrateBps') ? undefined : json['bitrateBps'],
        'container': !exists(json, 'container') ? undefined : json['container'],
        'creationTime': !exists(json, 'creationTime') ? undefined : json['creationTime'],
        'durationMs': !exists(json, 'durationMs') ? undefined : json['durationMs'],
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'fileSize': !exists(json, 'fileSize') ? undefined : json['fileSize'],
        'fileType': !exists(json, 'fileType') ? undefined : json['fileType'],
        'videoStreams': !exists(json, 'videoStreams') ? undefined : (json['videoStreams'] === null ? null : (json['videoStreams'] as Array<any>).map(VideoFileDetailsVideoStreamFromJSON)),
        'eTag': !exists(json, 'eTag') ? undefined : json['eTag'],
    };
}

export function VideoFileDetailsToJSON(value?: VideoFileDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'audioStreams': value.audioStreams === undefined ? undefined : (value.audioStreams === null ? null : (value.audioStreams as Array<any>).map(VideoFileDetailsAudioStreamToJSON)),
        'bitrateBps': value.bitrateBps,
        'container': value.container,
        'creationTime': value.creationTime,
        'durationMs': value.durationMs,
        'fileName': value.fileName,
        'fileSize': value.fileSize,
        'fileType': value.fileType,
        'videoStreams': value.videoStreams === undefined ? undefined : (value.videoStreams === null ? null : (value.videoStreams as Array<any>).map(VideoFileDetailsVideoStreamToJSON)),
        'eTag': value.eTag,
    };
}


