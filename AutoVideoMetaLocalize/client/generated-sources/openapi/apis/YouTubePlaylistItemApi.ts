/* tslint:disable */
/* eslint-disable */
/**
 * AutoVideoMetaLocalize
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    PlaylistItemListResponse,
    PlaylistItemListResponseFromJSON,
    PlaylistItemListResponseToJSON,
} from '../models';

export interface ApiYouTubePlaylistItemGetRequest {
    playlistId: string;
    pageToken?: string | null;
    maxResults?: number | null;
}

/**
 * no description
 */
export class YouTubePlaylistItemApi extends runtime.BaseAPI {

    /**
     */
    async apiYouTubePlaylistItemGetRaw(requestParameters: ApiYouTubePlaylistItemGetRequest): Promise<runtime.ApiResponse<PlaylistItemListResponse>> {
        if (requestParameters.playlistId === null || requestParameters.playlistId === undefined) {
            throw new runtime.RequiredError('playlistId','Required parameter requestParameters.playlistId was null or undefined when calling apiYouTubePlaylistItemGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.playlistId !== undefined) {
            queryParameters['playlistId'] = requestParameters.playlistId;
        }

        if (requestParameters.pageToken !== undefined) {
            queryParameters['pageToken'] = requestParameters.pageToken;
        }

        if (requestParameters.maxResults !== undefined) {
            queryParameters['maxResults'] = requestParameters.maxResults;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/YouTubePlaylistItem`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => PlaylistItemListResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiYouTubePlaylistItemGet(requestParameters: ApiYouTubePlaylistItemGetRequest): Promise<PlaylistItemListResponse> {
        const response = await this.apiYouTubePlaylistItemGetRaw(requestParameters);
        return await response.value();
    }

}
